# -*- coding: utf-8 -*-
"""
build_examples(products, quarter="Q4-2025", lang="ru", style="–¥—Ä—É–∂–µ–ª—é–±–Ω–æ, —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ") -> List[Dict]
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 2‚Äì3 –≥–æ—Ç–æ–≤—ã—Ö –ø—Ä–∏–º–µ—Ä–∞ –Ω–∞ —Ä–∞–∑–Ω—ã–µ –∫–∞–Ω–∞–ª—ã: instagram/email/podcast.
–ï—Å–ª–∏ –Ω–µ—Ç OPENAI_API_KEY –∏–ª–∏ —Å–µ—Ç—å —Ç–æ—Ä–º–æ–∑–∏—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–ª–ª–±—ç–∫.
"""

import os, json
from typing import Dict, List

def _pick_skus(products: Dict) -> List[str]:
    if not products:
        return ["IMMUNOCOMPLEX", "IMMUNOCOMPLEX_KIDS", "BIFOLAK_ZINCUM_C_D3"]
    skus = [str(k).upper().replace(" ", "_") for k in products.keys()]
    # –≤–æ–∑—å–º—ë–º 3 –ø–µ—Ä–≤—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö
    out, seen = [], set()
    for s in skus:
        if s not in seen:
            out.append(s); seen.add(s)
        if len(out) == 3: break
    if len(out) < 3:
        # –¥–æ–∫–∏–Ω–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—á–µ
        for s in ["IMMUNOCOMPLEX","IMMUNOCOMPLEX_KIDS","BIFOLAK_ZINCUM_C_D3"]:
            if s not in seen: out.append(s)
            if len(out) == 3: break
    return out[:3]

def _llm_available() -> bool:
    return bool(os.getenv("OPENAI_API_KEY"))

def _try_llm(prompt: str) -> str:
    """
    –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ chat.completions. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫ ‚Äî –≤–µ—Ä–Ω—ë–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏–ª—Å—è —Ñ–æ–ª–ª–±—ç–∫.
    """
    import requests
    url = os.getenv("OPENAI_BASE_URL", "https://api.openai.com/v1/chat/completions")
    model = os.getenv("OPENAI_MODEL", "gpt-4o-mini")
    timeout = int(os.getenv("OPENAI_TIMEOUT", "30"))
    headers = {"Authorization": f"Bearer {os.getenv('OPENAI_API_KEY','')}", "Content-Type":"application/json"}
    data = {
        "model": model,
        "temperature": float(os.getenv("OPENAI_TEMPERATURE","0.7")),
        "messages": [
            {"role":"system","content":"–¢—ã –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥-—Ä–µ–¥–∞–∫—Ç–æ—Ä. –ü–∏—à–∏ –ø–æ-—Ä—É—Å—Å–∫–∏, –∫—Ä–∞—Ç–∫–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ, –±–µ–∑ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –æ–±–µ—â–∞–Ω–∏–π: ¬´–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç/—Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç¬ª."},
            {"role":"user","content": prompt}
        ]
    }
    try:
        r = requests.post(url, headers=headers, json=data, timeout=timeout)
        r.raise_for_status()
        return r.json()["choices"][0]["message"]["content"].strip()
    except Exception:
        return ""

def _fallback_pack(sku: str, quarter: str) -> Dict:
    # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ + CTA
    if "KIDS" in sku:
        ig = (
            "üõ°Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–µ—Ç—Å–∫–æ–≥–æ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.\n\n"
            "Immunocomplex Kids ‚Äî —Å–æ—á–µ—Ç–∞–Ω–∏–µ –≤–∏—Ç–∞–º–∏–Ω–∞ C, D3, —Ü–∏–Ω–∫–∞ –∏ –ø—Ä–æ–±–∏–æ—Ç–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ "
            "–ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞—â–∏—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏. –î–æ–±–∞–≤—å—Ç–µ –∫ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –ø–∏—Ç–∞–Ω–∏—é –∏ –ø—Ä–æ–≥—É–ª–∫–∞–º.\n\n"
            "–°–æ–≤–µ—Ç –Ω–µ–¥–µ–ª–∏: —Å–µ–º–µ–π–Ω—ã–π —Ä–µ–∂–∏–º —Å–Ω–∞ + —Ç—ë–ø–ª—ã–µ –Ω–∞–ø–∏—Ç–∫–∏ –±–µ–∑ —Å–∞—Ö–∞—Ä–∞.\n"
            "#–¥–µ—Ç–∏ #–∏–º–º—É–Ω–∏—Ç–µ—Ç #—Å–µ–º–µ–π–Ω–æ–µ–∑–¥–æ—Ä–æ–≤—å–µ"
        )
        email = (
            "–¢–µ–º–∞: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ –≤–∞—à–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ\n\n"
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n"
            "–í —Å–µ–∑–æ–Ω –ø—Ä–æ—Å—Ç—É–¥ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –±–µ—Ä–µ–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥–µ—Ç—Å–∫—É—é –∏–º–º—É–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É. "
            "Immunocomplex Kids —Å–æ—á–µ—Ç–∞–µ—Ç –≤–∏—Ç–∞–º–∏–Ω C, D3, —Ü–∏–Ω–∫ –∏ –ø—Ä–æ–±–∏–æ—Ç–∏–∫–∏ ‚Äî –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ "
            "—Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ –∫ –ø—Ä–∏–≤—ã—á–Ω–æ–º—É —Ä–∞—Ü–∏–æ–Ω—É –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ.\n\n"
            "–°–ø–µ—Ü-–Ω–∞–±–æ—Ä –Ω–µ–¥–µ–ª–∏: Immunocomplex Kids + –ø–æ–ª–µ–∑–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π.\n"
            "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ."
        )
        pod = (
            "–ü–æ–¥–∫–∞—Å—Ç Biotact Inside ‚Äî –º–∏–Ω–∏-–≤—ã–ø—É—Å–∫ (8‚Äì10 –º–∏–Ω)\n"
            "–¢–µ–º–∞: –ß—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∏–º–º—É–Ω–∏—Ç–µ—Ç –¥–µ—Ç–µ–π –≤ —Å–µ–∑–æ–Ω –ø—Ä–æ—Å—Ç—É–¥?\n"
            "–ü–ª–∞–Ω: –∫–æ—Ä–æ—Ç–∫–æ –æ —Ä–µ–∂–∏–º–µ —Å–Ω–∞, –ø–∏—Ç–∞–Ω–∏–∏, —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏; —á–µ–º –ø–æ–ª–µ–∑–Ω—ã –≤–∏—Ç–∞–º–∏–Ω C, D3, —Ü–∏–Ω–∫ –∏ –ø—Ä–æ–±–∏–æ—Ç–∏–∫–∏; "
            "–∫–∞–∫ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—ã–µ —Å–µ–º–µ–π–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏. –î–∏—Å–∫–ª–µ–π–º–µ—Ä: —ç—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª."
        )
    elif "ZINCUM" in sku:
        ig = (
            "–ë–∞–ª–∞–Ω—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å: Bifolak Zincum + C + D3.\n\n"
            "–ö–æ–º–±–∏–Ω–∞—Ü–∏—è —Ü–∏–Ω–∫–∞, –≤–∏—Ç–∞–º–∏–Ω–∞ C –∏ D3 –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å –ø—Ä–æ–±–∏–æ—Ç–∏–∫–∞–º–∏ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∑–∞—â–∏—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ–±—â–µ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ. "
            "–ò–¥–µ—è –ø–æ—Å—Ç–∞: –∫–∞—Ä—É—Å–µ–ª—å ¬´3 –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é¬ª: –ø–∏—Ç–∞–Ω–∏–µ, –¥–≤–∏–∂–µ–Ω–∏–µ, –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏—è.\n"
            "#–ó–û–ñ #–∏–º–º—É–Ω–∏—Ç–µ—Ç #Bifolak"
        )
        email = (
            "–¢–µ–º–∞: –ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ —Å–µ–±—è –≤ —Å–µ–∑–æ–Ω –Ω–∞–≥—Ä—É–∑–∫–∏ ‚Äî Bifolak Zincum + C + D3\n\n"
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n"
            "–°–æ—á–µ—Ç–∞–Ω–∏–µ —Ü–∏–Ω–∫–∞, –≤–∏—Ç–∞–º–∏–Ω–∞ C –∏ D3 ‚Äî –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏. "
            "–î–æ–±–∞–≤—å—Ç–µ –∫ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Ä–∞—Ü–∏–æ–Ω—É –∏ –ø—Ä–æ–≥—É–ª–∫–∞–º ‚Äî –∏ –¥–∞–π—Ç–µ —Å–µ–±–µ –º—è–≥–∫–∏–π —Å—Ç–∞—Ä—Ç –Ω–µ–¥–µ–ª–∏.\n\n"
            "–ü—Ä–æ–º–æ: –∫–æ–º–ø–ª–µ–∫—Ç ¬´–¥–ª—è –±–æ–¥—Ä–æ–≥–æ —É—Ç—Ä–∞¬ª ‚Äî —Å–∫–∏–¥–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–∞–±–æ—Ä–∞.\n"
            "–ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Äî –ø–æ —Å—Å—ã–ª–∫–µ."
        )
        pod = (
            "–ü–æ–¥–∫–∞—Å—Ç Biotact Inside ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π –≤—ã–ø—É—Å–∫ (10‚Äì12 –º–∏–Ω)\n"
            "–¢–µ–º–∞: –ü–æ—á–µ–º—É ¬´–º–∏–Ω–∏–º—É–º-–ø—Ä–∏–≤—ã—á–µ–∫¬ª —Ä–∞–±–æ—Ç–∞—é—Ç –ª—É—á—à–µ –∂—ë—Å—Ç–∫–∏—Ö –ø–ª–∞–Ω–æ–≤?\n"
            "–ü–ª–∞–Ω: 1) —Å–æ–Ω –∏ –≤–æ–¥–∞; 2) –º–∏–∫—Ä–æ-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å; 3) –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è—é—Ç –≤–∏—Ç–∞–º–∏–Ω—ã/–º–∏–Ω–µ—Ä–∞–ª—ã; 4) –∫–∞–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞."
        )
    else:
        ig = (
            "Immunocomplex ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.\n\n"
            "–ë–µ—Ç–∞-–≥–ª—é–∫–∞–Ω, –≤–∏—Ç–∞–º–∏–Ω C, —Ü–∏–Ω–∫, —Å–µ–ª–µ–Ω –∏ –ø—Ä–æ–±–∏–æ—Ç–∏–∫–∏ ‚Äî —Å–æ—á–µ—Ç–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞—â–∏—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏. "
            "–î–æ–±–∞–≤—å—Ç–µ –∫ –ø—Ä–∏–≤—ã—á–∫–∞–º: —Å–æ–Ω, –≤–æ–¥–∞, –ø—Ä–æ–≥—É–ª–∫–∏. –î–µ–ª–∏–º—Å—è —á–µ–∫-–ª–∏—Å—Ç–æ–º –≤ —Å—Ç–æ—Ä–∏—Å.\n"
            "#–∏–º–º—É–Ω–∏—Ç–µ—Ç #wellness #—Å–µ–º—å—è"
        )
        email = (
            "–¢–µ–º–∞: –ú—è–≥–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ ‚Äî –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏\n\n"
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n"
            "Immunocomplex ‚Äî —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –∞–∫—Ç–∏–≤–æ–≤ (–±–µ—Ç–∞-–≥–ª—é–∫–∞–Ω, –≤–∏—Ç–∞–º–∏–Ω C, —Ü–∏–Ω–∫, —Å–µ–ª–µ–Ω, –ø—Ä–æ–±–∏–æ—Ç–∏–∫–∏), "
            "–∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞—â–∏—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏. –ú–∞—Ç–µ—Ä–∏–∞–ª –Ω–æ—Å–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä.\n\n"
            "–°–ø–µ—Ü-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏: –∫–æ–º–ø–ª–µ–∫—Ç –¥–ª—è –≤—Å–µ–π —Å–µ–º—å–∏.\n"
            "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ."
        )
        pod = (
            "–ü–æ–¥–∫–∞—Å—Ç Biotact Inside ‚Äî 10 –º–∏–Ω—É—Ç –ø–æ –¥–µ–ª—É\n"
            f"–¢–µ–º–∞ –Ω–µ–¥–µ–ª–∏ {quarter}: –∫–∞–∫ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —ç–Ω–µ—Ä–≥–∏—é –∏ —Ñ–æ–∫—É—Å –±–µ–∑ –∂—ë—Å—Ç–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n"
            "–ü–ª–∞–Ω: 1) –±–∞–∑–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏; 2) –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –Ω—É—Ç—Ä–∏–µ–Ω—Ç—ã; 3) —Ä–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º; 4) Q&A."
        )

    return {
        "product": sku,
        "instagram": ig,
        "email": email,
        "podcast": pod
    }

def build_examples(products: Dict, quarter: str = "Q4-2025", lang: str = "ru", style: str = "–¥—Ä—É–∂–µ–ª—é–±–Ω–æ, —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ") -> List[Dict]:
    skus = _pick_skus(products)
    out: List[Dict] = []
    for sku in skus:
        # –ü—ã—Ç–∞–µ–º—Å—è LLM (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–ª—é—á –∏ —Å–µ—Ç—å), –∏–Ω–∞—á–µ ‚Äî —Ñ–æ–ª–ª–±—ç–∫
        if _llm_available():
            prompt = (
                f"–°–¥–µ–ª–∞–π 3 –Ω–µ–±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–∞ –¥–ª—è SKU {sku} –Ω–∞ {lang} ({style}). "
                "1) Instagram-–ø–æ—Å—Ç 100‚Äì140 —Å–ª–æ–≤ (–±–µ–∑ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –æ–±–µ—â–∞–Ω–∏–π, —Ç–æ–ª—å–∫–æ ¬´–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç/—Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç¬ª, —Å 2‚Äì3 —Ö–µ—à—Ç–µ–≥–∞–º–∏). "
                "2) Email: —Ç–µ–º–∞ + 120‚Äì160 —Å–ª–æ–≤, –º—è–≥–∫–∏–π CTA. "
                "3) –°—Ü–µ–Ω–∞—Ä–∏–π –º–∏–Ω–∏-–ø–æ–¥–∫–∞—Å—Ç–∞ 100‚Äì180 —Å–ª–æ–≤ (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞: –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ/3 –ø—É–Ω–∫—Ç–∞/—Ñ–∏–Ω–∞–ª)."
            )
            txt = _try_llm(prompt)
            if txt:
                # –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–π —Å–ø–ª–∏—Ç ‚Äî –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞
                parts = txt.split("\n")
                ig, email, pod = "", "", ""
                bucket = "ig"
                for line in parts:
                    l = line.strip()
                    if not l: continue
                    low = l.lower()
                    if "email" in low or "—Ç–µ–º–∞:" in low: bucket = "email"; continue
                    if "–ø–æ–¥–∫–∞—Å—Ç" in low or "podcast" in low: bucket = "pod"; continue
                    if bucket == "ig": ig += (l + " ")
                    elif bucket == "email": email += (l + " ")
                    else: pod += (l + " ")
                out.append({"product": sku, "instagram": ig.strip(), "email": email.strip(), "podcast": pod.strip()})
                continue

        # –µ—Å–ª–∏ LLM –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª ‚Äî —Ñ–æ–ª–ª–±—ç–∫
        out.append(_fallback_pack(sku, quarter))
    return out
